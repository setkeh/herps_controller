/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Sun Jun  2 03:09:28 2019. */

#ifndef PB_PROTOBUFF_PB_H_INCLUDED
#define PB_PROTOBUFF_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _EnvironmentMessage {
    pb_callback_t DeviceID;
    int32_t Humidity;
    int32_t Temperature;
/* @@protoc_insertion_point(struct:EnvironmentMessage) */
} EnvironmentMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define EnvironmentMessage_init_default          {{{NULL}, NULL}, 0, 0}
#define EnvironmentMessage_init_zero             {{{NULL}, NULL}, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define EnvironmentMessage_DeviceID_tag          1
#define EnvironmentMessage_Humidity_tag          2
#define EnvironmentMessage_Temperature_tag       3

/* Struct field encoding specification for nanopb */
extern const pb_field_t EnvironmentMessage_fields[4];

/* Maximum encoded size of messages (where known) */
/* EnvironmentMessage_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PROTOBUFF_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
